(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{594:function(t,e,r){t.exports=r.p+"assets/img/harbor-whatisharbor.eeb68fe9.png"},595:function(t,e,r){t.exports=r.p+"assets/img/harbor-maturitylevels.339ef550.png"},596:function(t,e,r){t.exports=r.p+"assets/img/harbor-container.9905ce0c.png"},597:function(t,e,r){t.exports=r.p+"assets/img/harbor-archi.b3fa36eb.png"},598:function(t,e,r){t.exports=r.p+"assets/img/harbor-mainfeature.bd32d2ad.png"},599:function(t,e,r){t.exports=r.p+"assets/img/harbor-rbac.f1106852.png"},600:function(t,e,r){t.exports=r.p+"assets/img/harbor-nexus.b9da7710.png"},601:function(t,e,r){t.exports=r.p+"assets/img/harbor-dp3archi.b17b0649.png"},602:function(t,e,r){t.exports=r.p+"assets/img/harbor-https.1f8f7a66.png"},603:function(t,e,r){t.exports=r.p+"assets/img/harbor-route53.dd302a68.png"},604:function(t,e,r){t.exports=r.p+"assets/img/harbor-certmanager.666834d4.png"},605:function(t,e,r){t.exports=r.p+"assets/img/harbor-certificate.b8f73613.png"},606:function(t,e,r){t.exports=r.p+"assets/img/harbor-kubed2.d4486d0b.png"},607:function(t,e,r){t.exports=r.p+"assets/img/harbor-helminstall.bdcc7190.png"},608:function(t,e,r){t.exports=r.p+"assets/img/harbor-label.e97e1828.png"},609:function(t,e,r){t.exports=r.p+"assets/img/harbor-annotate.71259ecb.png"},610:function(t,e,r){t.exports=r.p+"assets/img/harbor-helmresource.5cb60f2d.png"},611:function(t,e,r){t.exports=r.p+"assets/img/harbor-home.eee3717b.png"},612:function(t,e,r){t.exports=r.p+"assets/img/harbor-realm.929dd58d.png"},613:function(t,e,r){t.exports=r.p+"assets/img/harbor-keycloaksetting.44e643d0.png"},614:function(t,e,r){t.exports=r.p+"assets/img/harbor-settingdetail.27e98b33.png"},615:function(t,e,r){t.exports=r.p+"assets/img/harbor-keycredentials.1df92309.png"},616:function(t,e,r){t.exports=r.p+"assets/img/harbor-configuration.337d868d.png"},617:function(t,e,r){t.exports=r.p+"assets/img/harbor-oidc.32842c10.png"},618:function(t,e,r){t.exports=r.p+"assets/img/harbor-mainoidc.36879677.png"},619:function(t,e,r){t.exports=r.p+"assets/img/harbor-user.3ef78350.png"},620:function(t,e,r){t.exports=r.p+"assets/img/harbor-keyuser.0728c737.png"},621:function(t,e,r){t.exports=r.p+"assets/img/harbor-rolemappings.73b5f8a3.png"},622:function(t,e,r){t.exports=r.p+"assets/img/harbor-login.88a57a6d.png"},623:function(t,e,r){t.exports=r.p+"assets/img/harbor-username.783b9b8c.png"},624:function(t,e,r){t.exports=r.p+"assets/img/harbor-users.84e887a6.png"},625:function(t,e,r){t.exports=r.p+"assets/img/harbor-userprofile.d6c3d95f.png"},626:function(t,e,r){t.exports=r.p+"assets/img/harbor-userprofiledetail.58d4f302.png"},627:function(t,e,r){t.exports=r.p+"assets/img/harbor-dockerlogin.dd06cf04.png"},628:function(t,e,r){t.exports=r.p+"assets/img/harbor-hahabor.7a01c0e9.png"},629:function(t,e,r){t.exports=r.p+"assets/img/harbor-endpoint.8024094a.png"},630:function(t,e,r){t.exports=r.p+"assets/img/harbor-endpointrule.ab0767d2.png"},631:function(t,e,r){t.exports=r.p+"assets/img/harbor-dockerpush.ca3bfe1e.png"},632:function(t,e,r){t.exports=r.p+"assets/img/harbor-sync.d4b6a0f3.png"},633:function(t,e,r){t.exports=r.p+"assets/img/harbor-scanning.64576def.png"},634:function(t,e,r){t.exports=r.p+"assets/img/harbor-vulnerabilities.41e65a30.png"},635:function(t,e,r){t.exports=r.p+"assets/img/harbor-vulseverity.5e03b84a.png"},750:function(t,e,r){"use strict";r.r(e);var s=r(15),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"harbor-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#harbor-overview"}},[t._v("#")]),t._v(" Harbor Overview")]),t._v(" "),s("h3",{attrs:{id:"_1-harbor란"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-harbor란"}},[t._v("#")]),t._v(" 1. Harbor란?")]),t._v(" "),s("h4",{attrs:{id:"_1-harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-harbor"}},[t._v("#")]),t._v(" 1. Harbor?")]),t._v(" "),s("p",[s("img",{attrs:{src:r(594),alt:"What is harbor?"}}),s("br"),t._v("\n(출처 : https://goharbor.io/)")]),t._v(" "),s("p",[t._v("Harbor는 정책 및 역할 기반 액세스 제어로 artifact를 보호하고, 이미지가 스캔되고 취약성이 없는지 확인하고, 이미지를 신뢰할 수 있는 것으로 서명하는 오픈 소스 레지스트리입니다. CNCF(Cloud Native Computing Foundation) 재단 Graduated 프로젝트인 Harbor는 규정 준수, 성능 및 상호 운용성을 제공하여 Kubernetes 및 Docker와 같은 클라우드 네이티브 컴퓨팅 플랫폼에서 일관되고 안전하게 artifact를 관리하는 데 도움이 됩니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(595),alt:"CNCF 프로젝트 성숙도 기준"}}),s("br"),t._v("\n(CNCF 프로젝트 성숙도 기준, 출처: https://www.cncf.io/projects/)")]),t._v(" "),s("img",{attrs:{src:r(596),width:"70%",height:"70%"}}),t._v(" "),s("p",[t._v("(출처: https://landscape.cncf.io/?category=container-registry&grouping=category)")]),t._v(" "),s("h4",{attrs:{id:"_2-architecture-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-architecture-overview"}},[t._v("#")]),t._v(" 2. Architecture Overview")]),t._v(" "),s("p",[s("img",{attrs:{src:r(597),alt:"Harbor Architecture"}}),s("br"),t._v("\n(출처: https://github.com/goharbor/harbor/wiki/Arch%E3%85%81itecture-Overview-of-Harbor)")]),t._v(" "),s("h4",{attrs:{id:"_3-main-feature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-main-feature"}},[t._v("#")]),t._v(" 3. Main Feature")]),t._v(" "),s("p",[s("img",{attrs:{src:r(598),alt:"Harbor Mainfeature"}}),s("br"),t._v("\n(출처: https://goharbor.io/)")]),t._v(" "),s("ul",[s("li",[t._v("Security and vulnerability analysis\n"),s("ul",[s("li",[t._v("Harbor는 이미지를 정기적으로 스캔하여 취약성을 확인하고 취약한 이미지가 배포되는 것을 방지하기 위한 정책 검사를 수행한다.")])])]),t._v(" "),s("li",[t._v("Content signing and validation")]),t._v(" "),s("li",[t._v("Multi-tenant")]),t._v(" "),s("li",[t._v("Extensible API and web UI")]),t._v(" "),s("li",[t._v("Image replication across multiple Harbor instances\n"),s("ul",[s("li",[t._v("filter(repository, tag, label)를 사용하는 정책을 기반으로 여러 레지스트리 인스턴스 간에 이미지와 차트를 복제(동기화)할 수 있다. Harbor는 오류가 발생하면 자동으로 복제를 재시도한다. 이는 로드 밸런싱을 지원하고 고가용성을 달성하며 하이브리드 및 다중 클라우드 시나리오에서 다중 데이터 센터 배포를 촉진하는 데 사용할 수 있다.")])])]),t._v(" "),s("li",[t._v("Identity integration and role-based access control(RBAC) : 프로젝트별로 유저의 권한을 따로 부여할 수 있고, 그 권한에 따라 액션이 제한된다.")])]),t._v(" "),s("p",[s("img",{attrs:{src:r(599),alt:"Harbor RBAC"}}),s("br"),t._v("\n(출처: https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#role-based-access-controlrbac)")]),t._v(" "),s("h3",{attrs:{id:"_2-why-harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-why-harbor"}},[t._v("#")]),t._v(" 2. Why Harbor?")]),t._v(" "),s("h4",{attrs:{id:"_1-public-vs-private"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-public-vs-private"}},[t._v("#")]),t._v(" 1. public vs. private")]),t._v(" "),s("p",[t._v("컨테이너 레지스트리에는 public 및 private의 두 가지 유형이 있습니다.")]),t._v(" "),s("p",[t._v("- "),s("strong",[t._v("public registry")]),t._v("는 abilities/offerings 측면에서 기본적이며 사용하기 쉽고, 가능한 한 빨리 registry를 시작하고 실행하려는 개인 또는 소규모 팀에 적합합니다. 그러나 규모가 성장함에 따라 패치, 개인 정보 보호 및 액세스 제어와 같은 보안 문제가 발생할 수 있습니다.")]),t._v(" "),s("p",[t._v("- "),s("strong",[t._v("pirvate registry")]),t._v("는 원격으로 호스팅되거나 온프레미스에서 호스팅되는 엔터프라이즈 컨테이너 이미지 스토리지에 보안 및 개인 정보를 통합하는 방법을 제공합니다. 회사는 자체 컨테이너 registry를 만들고 배포하도록 선택하거나 상업적 private registry 서비스를 선택할 수 있습니다. 이러한 private registry에는 고급 보안 기능과 기술 지원이 함께 제공되는 경우가 많습니다.")]),t._v(" "),s("h4",{attrs:{id:"_2-nexus-vs-harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-nexus-vs-harbor"}},[t._v("#")]),t._v(" 2. nexus vs. harbor")]),t._v(" "),s("table",{staticStyle:{"border-collapse":"collapse",width:"100%"},attrs:{"data-ke-align":"alignLeft","data-ke-style":"style12"}},[s("tbody",[s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"17.0542%",height:"18px","text-align":"center"}},[t._v(" ")]),s("td",{staticStyle:{width:"44.1473%",height:"18px","text-align":"center"}},[s("b",[t._v("nexus")])]),s("td",{staticStyle:{width:"38.7984%",height:"18px","text-align":"center"}},[s("b",[t._v("harbor")])])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"17.0542%",height:"18px","text-align":"center"}},[s("b",[t._v("docker")])]),s("td",{staticStyle:{width:"44.1473%",height:"18px"}},[s("span",{staticStyle:{color:"#000000"}},[s("span",[t._v(" ")]),t._v("Docker Registry가 주된 기능이 아닌 통합 Repository 개념")])]),s("td",{staticStyle:{width:"38.7984%",height:"18px"}},[s("span",{staticStyle:{color:"#000000"}},[t._v("Docker Registry이외에 Garbage Collection, Docker Image 취약점 점검 등의 부가 기능을 추가로 제공")])])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"17.0542%",height:"18px","text-align":"center"}},[s("b",[t._v("Active/Active HA")])]),s("td",{staticStyle:{width:"44.1473%",height:"18px"}},[t._v("Nexus Repository Pro에 한해 HA-C 지원"),s("br"),t._v("(Starts at 3,000$/year)")]),s("td",{staticStyle:{width:"38.7984%",height:"18px"}},[t._v("Replication으로 Registry 간의 이미지 동기화 지원")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:r(600),alt:"Nexus"}}),s("br"),t._v("\n(출처: https://help.sonatype.com/repomanager3/high-availability)")]),t._v(" "),s("h4",{attrs:{id:"_3-harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-harbor"}},[t._v("#")]),t._v(" 3. Harbor?")]),t._v(" "),s("table",{staticStyle:{"border-collapse":"collapse",width:"100%"},attrs:{"data-ke-align":"alignLeft","data-ke-style":"style12"}},[s("tbody",[s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%","text-align":"center",height:"18px"}},[t._v("pros")]),s("td",{staticStyle:{width:"33.3333%","text-align":"center",height:"18px"}},[t._v("cons")])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%",height:"18px"}},[t._v("identity management")]),s("td",{staticStyle:{width:"33.3333%",height:"90px"},attrs:{rowspan:"5"}},[s("h3",{attrs:{"data-ke-size":"size23"}},[s("span",{staticStyle:{"font-size":"15px",color:"#333333","font-family":"-apple-system, BlinkMacSystemFont, AppleSDGothicNeo-Regular, 'Malgun Gothic', '맑은 고딕', dotum, 돋움, sans-serif","letter-spacing":"0px"}},[t._v("hard to setup on k8s cluster")])])])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%",height:"18px"}},[t._v("API and graphical UI")])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%",height:"18px"}},[s("span",{staticStyle:{color:"#151515"}},[t._v("Vulnerability scanning")])])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%",height:"18px"}},[t._v("image replication")])]),s("tr",{staticStyle:{height:"18px"}},[s("td",{staticStyle:{width:"33.3333%",height:"18px"}},[t._v("online or offline installation")])])])]),t._v("\n(출처: https://www.slant.co/topics/2436/~best-docker-image-private-registries)\n"),s("h3",{attrs:{id:"_3-our-harbor-architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-our-harbor-architecture"}},[t._v("#")]),t._v(" 3. Our Harbor Architecture")]),t._v(" "),s("p",[s("img",{attrs:{src:r(601),alt:"DP3 Harbor Archi."}})]),t._v(" "),s("h2",{attrs:{id:"practice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#practice"}},[t._v("#")]),t._v(" Practice")]),t._v(" "),s("h3",{attrs:{id:"_1-https-수신-컨트롤러-구성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-https-수신-컨트롤러-구성"}},[t._v("#")]),t._v(" 1. HTTPS 수신 컨트롤러 구성")]),t._v(" "),s("p",[t._v("Harbor는 선택적으로 HTTP 연결을 지원하지만 Docker Client는 항상 먼저 HTTPS를 사용하여 레지스트리에 연결을 시도한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(602),alt:"HTTPS"}}),s("br"),t._v("\n(출처: https://goharbor.io/docs/1.10/working-with-projects/working-with-images/pulling-pushing-images/)")]),t._v(" "),s("h4",{attrs:{id:"_1-eks에-https-수신-컨트롤러-만들기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-eks에-https-수신-컨트롤러-만들기"}},[t._v("#")]),t._v(" 1. EKS에 HTTPS 수신 컨트롤러 만들기")]),t._v(" "),s("p",[t._v("수신 컨트롤러는 역방향 프록시, 구성 가능한 트래픽 라우팅, Kubernetes 서비스에 대한 TLS 종료를 제공하는 소프트웨어이다. Kubernetes 수신 리소스는 개별 Kubernetes 서비스에 대한 수신 규칙 및 라우팅을 구성하는 데 사용된. 수신 컨트롤러 및 수신 규칙을 사용하면 단일 IP 주소를 사용하여 Kubernetes 클러스터의 여러 서비스에 트래픽을 라우팅할 수 있다.")]),t._v(" "),s("h5",{attrs:{id:"_1-nginx-ingress-controller-설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx-ingress-controller-설치"}},[t._v("#")]),t._v(" 1) nginx ingress controller 설치")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# namespace 생성\nkubectl create ns dp3-ingress-basic\n\n# Helm repo add\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\n\n# Helm으로 Nginx Ingress Controller 설치\nhelm install dp3-nginx-ingress ingress-nginx/ingress-nginx \\\n    --namespace dp3-ingress-basic \\\n    --set controller.replicaCount=2 \\\n    --set controller.nodeSelector."beta\\.kubernetes\\.io/os"=linux \\\n    --set defaultBackend.nodeSelector."beta\\.kubernetes\\.io/os"=linux \\\n    --set controller.admissionWebhooks.patch.nodeSelector."beta\\.kubernetes\\.io/os"=linux\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h5",{attrs:{id:"_2-route-53-호스팅-영역에-record-추가하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-route-53-호스팅-영역에-record-추가하기"}},[t._v("#")]),t._v(" 2) Route 53 호스팅 영역에 Record 추가하기")]),t._v(" "),s("p",[s("img",{attrs:{src:r(603),alt:"Route53"}})]),t._v(" "),s("h5",{attrs:{id:"_3-cert-manager-설치하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-cert-manager-설치하기"}},[t._v("#")]),t._v(" 3) cert-manager 설치하기")]),t._v(" "),s("p",[t._v("Cert-manager 는 k8s 클러스터 내에서 TLS(구 SSL)_인증서를 자동으로 프로비저닝 및 관리_하는 오픈소스이다.")]),t._v(" "),s("p",[t._v("Cert-manager는"),s("a",{attrs:{href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("let’s encrypt"),s("OutboundLink")],1),t._v(","),s("a",{attrs:{href:"https://www.vaultproject.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vault"),s("OutboundLink")],1),t._v("같은 것을들 사용하여 인증서 발급을 할 수 있다. 인증서 발급후에도 만료가 되기 전 자동갱신을 한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(604),alt:"cert-manager"}}),s("br"),t._v("\n(출처: https://cert-manager.io/docs/)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# Label the ingress-basic namespace to disable resource validation\nkubectl label ns dp3-ingress-basic cert-manager.io/disable-validation=true\n\n# Add the Jetstack Helm repository\nhelm repo add jetstack https://charts.jetstack.io\n\n# Update your local Helm chart repository cache\nhelm repo update\n\n# Install the cert-manager Helm chart\nhelm install dp3-cert-manager jetstack/cert-manager \\\n  --namespace dp3-ingress-basic \\\n  --set installCRDs=true \\\n  --set nodeSelector."kubernetes\\.io/os"=linux \\\n  --set webhook.nodeSelector."kubernetes\\.io/os"=linux \\\n  --set cainjector.nodeSelector."kubernetes\\.io/os"=linux\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h5",{attrs:{id:"_4-cluster-issuer-생성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-cluster-issuer-생성"}},[t._v("#")]),t._v(" 4) Cluster Issuer 생성")]),t._v(" "),s("p",[t._v("Let's Encrypt는 보안 웹사이트를 위한 인증서의 수동 생성, 유효성 확인, 디지털 서명, 설치, 갱신 등 종전의 복잡한 과정을 없애주는 자동화된 프로세스를 통해 전송 계층 보안 암호화를 위해 무료 X.509 인증서를 제공하는 인증 기관이다.")]),t._v(" "),s("p",[s("em",[t._v("= 무료 SSL 인증서 자동 생성")])]),t._v(" "),s("p",[t._v("Let's Encrypt에서 인증서를 생성할 수 있도록cert-manager에서 사용하는 ClusterIssuer를 생성한다.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: MY_EMAIL_ADDRESS\n    privateKeySecretRef:\n      name: letsencrypt\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n          podTemplate:\n            spec:\n              nodeSelector:\n                "kubernetes.io/os": linux\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("Cluster Issuer를 apply한 후 ingress 리소스를 생성하면 spec 하위에 아래와 같은 내용이 생겨있다.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  tls:\n  - hosts:\n    - [YOUR_DOMAIN]\n    secretName: tls-secret\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("이 부분을 적절히 설정하면 아래와 같은 처리가 진행된다.")]),t._v(" "),s("ul",[s("li",[t._v("spec.tls.hosts에 설정한 도메인에 대한 검증을 진행한다. 검증에 필요한 웹 서버를 실행하고, 라우팅 설정을 업데이트한다.")]),t._v(" "),s("li",[t._v("인증서가 발행되면spec.tls.secretName에서 지정한"),s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/configuration/secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("secret"),s("OutboundLink")],1),t._v("에 저장한다. secret이 존재하지 않으면, 새로 만들고 저장한다.")])]),t._v(" "),s("p",[t._v("인증서 발급이 정상적으로 완료되면, 아래와 같이 Ready = True 상태인 certificate를 조회할 수 있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(605),alt:"certificate"}})]),t._v(" "),s("p",[t._v("이렇게 Ingress 가 생성될 때마다 자동으로 SSL 인증서를 생성할 준비가 완료되었다.")]),t._v(" "),s("h5",{attrs:{id:"별첨"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#별첨"}},[t._v("#")]),t._v(" +) 별첨")]),t._v(" "),s("ol",[s("li",[t._v("kubed")])]),t._v(" "),s("p",[t._v("다른 namespace에서 저번에 만들어둔 인증서를 사용하고 싶다면 어떻게 할까?")]),t._v(" "),s("p",[t._v("kubed 는 cluster나 namespace 간에 configmaps/secrets를 동기화하는 기능을 한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(606),alt:"kubed"}}),s("br"),t._v("\n(출처: https://cert-manager.io/docs/)")]),t._v(" "),s("p",[t._v("Helm으로 kubed 설치")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("helm repo add appscode https://charts.appscode.com/stable/\nhelm install dp3-kubed appscode/kubed --namespace dp3-ingress-basic \\\n  --set config.clusterName=htdp1-cluster-001 \\\n  --set apiserver.enabled=false\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("img",{attrs:{src:r(607),alt:"helm"}})]),t._v(" "),s("p",[t._v('그리고 harbor를 설치할 ns와 secret을 공유하기위해 현재 ns에 라벨링을 해준다. (나는 "app=dp3"이라는 라벨을 걸어주었다.)')]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("kubectl label ns dp3-ingress-basic app=dp3\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:r(608),alt:"harbor label"}})]),t._v(" "),s("p",[t._v("다른 ns와 공유할 secret을 annotate 해준다.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('kubectl annotate secret tls-secret -n dp3-ingress-basic kubed.appscode.com/sync="app=dp3"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:r(609),alt:"secret"}})]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-harbor-설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-harbor-설치"}},[t._v("#")]),t._v(" 2. Harbor 설치")]),t._v(" "),s("p",[t._v("Helm으로 harbor 설치")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("helm repo add harbor https://helm.goharbor.io\nhelm install dp3-harbor -n dp3-harbor harbor/harbor \\\n  --set expose.ingress.hosts.core=harbor.htdp1.kubepia.net \\\n  --set persistence.enabled=true \\\n  --set externalURL=https://harbor.htdp1.kubepia.net\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("생성된 리소스 확인")]),t._v(" "),s("p",[s("img",{attrs:{src:r(610),alt:"helm resource"}})]),t._v(" "),s("p",[t._v("chartmuseum,notary, trivy 등 3rd party들도 같이 설치되었다. 각 구성요소의 기능은 아래와 같다.")]),t._v(" "),s("p",[t._v("- notary : docker image 서명 관리 도구"),s("br"),t._v("\n- redis : 데이터 캐싱, 작업 메타 데이터 캐시"),s("br"),t._v("\n- postgresql : 백엔드 스토리지 데이터 저장"),s("br"),t._v("\n- Clair : 컨테이너 취약점 분석"),s("br"),t._v("\n- trivy : 컨테이너 취약점 분석"),s("br"),t._v("\n- jobservice : 백그라운드 작업을 대기열에 넣고 처리할 수 있는 "),s("a",{attrs:{href:"https://github.com/gocraft/work",target:"_blank",rel:"noopener noreferrer"}},[t._v("작업"),s("OutboundLink")],1),t._v(" 을 기반으로 image replication에 사용됨"),s("br"),t._v("\n- chartmuseum: helm chart 저장소")]),t._v(" "),s("p",[t._v("ingress에서 host를 수정해주고 브라우저에서 harbor.htdp1.kubepia.net으로 접속한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(611),alt:"harbor main"}})]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-keyclock-oidc-연동-및-권한제어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-keyclock-oidc-연동-및-권한제어"}},[t._v("#")]),t._v(" 3. keyclock OIDC 연동 및 권한제어")]),t._v(" "),s("h4",{attrs:{id:"_1-keycloak에-client-추가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-keycloak에-client-추가"}},[t._v("#")]),t._v(" 1. Keycloak에 Client 추가")]),t._v(" "),s("p",[t._v("htdp1 Realm에 Client를 생성한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(612),alt:"realm"}})]),t._v(" "),s("p",[t._v("Root URL에 Keycloak과 연동할 도메인을 입력해주고 Save한다.")]),t._v(" "),s("p",[t._v("다음은 Settings 진입")]),t._v(" "),s("p",[s("img",{attrs:{src:r(613),alt:"keycloak setting"}})]),t._v(" "),s("p",[s("img",{attrs:{src:r(614),alt:"setting detail"}})]),t._v(" "),s("p",[t._v("Client Setting에서 Access Type = confidential로 설정후 Credentials 탭으로 이동해보면,")]),t._v(" "),s("p",[s("img",{attrs:{src:r(615),alt:"credentials"}})]),t._v(" "),s("p",[t._v("위와같이 Secret uuid가 생성된 것을 볼 수 있다!")]),t._v(" "),s("p",[t._v("이 Client Id 와 Secret으로 연동을 진행할 것이다")]),t._v(" "),s("h4",{attrs:{id:"_2-harbor-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-harbor-configuration"}},[t._v("#")]),t._v(" 2. Harbor Configuration")]),t._v(" "),s("p",[t._v("Harbor 관리자 계정으로 접속 후, 왼쪽 메뉴에서 Configuration을 선택한다.")]),t._v(" "),s("p",[t._v("여기서 auth mode=OIDC, provider=keycloak, endpoint= keycloak 도메인을 입력해주고")]),t._v(" "),s("p",[t._v("아까 keycloak 에서 확인한 client id 와 secret을 입력한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(616),alt:"configuration"}})]),t._v(" "),s("p",[s("img",{attrs:{src:r(617),alt:"oidc verified"}})]),t._v(" "),s("p",[s("img",{attrs:{src:r(618),alt:"harbor main oidc"}})]),t._v(" "),s("p",[s("strong",[t._v("LOGIN VIA OIDC PROVIDER")]),t._v("버튼이 생성되었다. 이제 Keycloak 계정을 통해 Harbor에 접속할 수 있다.")]),t._v(" "),s("p",[t._v("이제는 keycloak 계정을 통한 user 별 (또는 group 별) 권한제어를 위해,")]),t._v(" "),s("p",[s("strong",[t._v("keycloak에 생성한 user")]),t._v("를 harbor UI 를 통해서"),s("strong",[t._v("제어")]),t._v("할 수 있는지 확인하고, CLI로 로그인 및 docker event도 테스트해볼 것이다.")]),t._v(" "),s("p",[t._v("일단 harbor에 연동해둔 keycloak의 Realm으로 진입후 Users 메뉴를 선택후 Add user 버튼을 누른다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(619),alt:"keycloack user"}})]),t._v(" "),s("p",[t._v("적당히 만들어준다. Save 버튼을 눌러 user를 생성한 후 , Credentials 탭으로 진입한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(620),alt:"keyclock user credential"}})]),t._v(" "),s("p",[t._v('password / confirmation을 입력하고 "Set Password" 버튼을 누른다. 다음은 Role Mappings 탭에 진입한다.')]),t._v(" "),s("p",[s("img",{attrs:{src:r(621),alt:"role mappings"}})]),t._v(" "),s("p",[t._v("Client Roles 콤보박스에서 harbor에 연결했던 client를 선택하고, Role을 Mapping해 준다.")]),t._v(" "),s("p",[t._v('이제 적당히 User가 생성되었으므로, Harbor Web UI에서 "Login via OIDC Provider" 버튼을 눌러 로그인한다.')]),t._v(" "),s("p",[s("img",{attrs:{src:r(622),alt:"harbor login"}})]),t._v(" "),s("p",[t._v("password를 변경해 주고 나면 OIDC username을 입력하는 창이 뜨고")]),t._v(" "),s("p",[s("img",{attrs:{src:r(623),alt:"set username"}})]),t._v(" "),s("p",[t._v("이거까지 입력해주고 나면 harbor에 로그인이 된다. 이후에 admin 계정으로 들어가 보면, users에 방금 생성한 계정이 생겨있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(624),alt:"harbor users"}})]),t._v(" "),s("p",[t._v("이제 해당 user로 CLI command를 날려볼 것이다.")]),t._v(" "),s("p",[t._v("다시 아까 생성한 user로 접속해 오른쪽 상단의 OIDC username을 클릭해 User profile로 들어간다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(625),alt:"user profile"}})]),t._v(" "),s("p",[s("img",{attrs:{src:r(626),alt:"user profile detail"}})]),t._v(" "),s("p",[t._v("CLI secret을 복사해 두고, docker login [YOUR_DOMAIN]을 시도한다.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker login harbor2.htdp1.kubepia.net\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("harbor에서 설정한 OIDC username과 CLI secret으로 로그인하자.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(627),alt:"docker login"}})]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-registry-replication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-registry-replication"}},[t._v("#")]),t._v(" 4. Registry Replication")]),t._v(" "),s("h4",{attrs:{id:"_1-이중화-구성하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-이중화-구성하기"}},[t._v("#")]),t._v(" 1. 이중화  구성하기")]),t._v(" "),s("p",[t._v('Harbor에서 공식적으로 지원하는 기능 중 " Configuring Replication " 이 있다.')]),t._v(" "),s("p",[t._v("이는 여러 Registry 간에 resource ( image, chart 등 ) 들을 동기화 하는 기능을 한다.")]),t._v(" "),s("p",[t._v("Harbour 시스템 관리자가 Replication Rule 을 설정한 경우 트리거 조건이 충족되면 정의된 필터 패턴과 일치하는 모든 리소스가 대상 레지스트리에 복제된다.")]),t._v(" "),s("p",[t._v("cf) 그런데 실제 운영환경에서 수십 또는 수백 개의 클러스터 노드를 릴리스하기 위해 미러링해야 하는 경우가 많다.이 경우 단일 다운로드 레지스트리는 많은 노드의 요구를 충족할 수 없으므로 로드 밸런싱을 수행하도록 여러 인스턴스 레지스트리를 구성한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(628),alt:"harbor ha"}})]),t._v(" "),s("p",[t._v("harbor 에서는 위와 같이 다양한 Registry들의 Replication을 지원하고 있다.")]),t._v(" "),s("p",[t._v("미리 harbor Registry를 하나 더 구성해 두고 (harbor2), harbor2에서 기존 harbor의 endpoint를 등록해보았다")]),t._v(" "),s("p",[s("img",{attrs:{src:r(629),alt:"harbor endpoint"}})]),t._v(" "),s("p",[t._v("endpoint를 등록했다면 Replications 메뉴로 들어가 Rule을 생성해 본다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(630),alt:"harbor endpoint rule"}})]),t._v(" "),s("p",[t._v("Destination registry ( 데이터를 동기화할 Registry )에 방금 등록한 endpoint가 뜨는 것을 볼 수 있다.")]),t._v(" "),s("p",[t._v("push-based와 pull-based는 artifact를 복제할때 다른 registry로부터 복제받을 것인지 혹은 다른 registry로 복제할 것인지를 결정한다. ( 공식 Harbor docs: Select"),s("strong",[t._v("Push-based")]),t._v("or"),s("strong",[t._v("Pull-based")]),t._v("replication, depending on whether you want to replicate artifacts to or from the remote registry. )")]),t._v(" "),s("p",[t._v("이렇게 등록해놓고 나면 아래처럼 harbor2에 image가 push 될 때 마다 기존 harbor와 데이터가 동기화 된다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(631),alt:"docker push"}})]),t._v(" "),s("p",[t._v("harbor2에 image push")]),t._v(" "),s("p",[s("img",{attrs:{src:r(632),alt:"sync"}})]),t._v(" "),s("p",[t._v("기존 harbor에도 kmchoi-test가 Push되었다.")]),t._v(" "),s("p",[t._v("그런데 harbor2에 기존 harbor Registry를 등록하는 것은 harbor2->harbor 로의 단방향 동기화만을 의미하기 때문에,")]),t._v(" "),s("p",[t._v("양방향 동기화를 원한다면 harbor에서도 harbor2 Registry와 Rule을 생성해주어야 한다.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_5-vulnerability-scanning"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vulnerability-scanning"}},[t._v("#")]),t._v(" 5. Vulnerability Scanning")]),t._v(" "),s("p",[t._v("Projects > Repo 진입")]),t._v(" "),s("p",[t._v("Artifacts 탭에서 원하는 이미지를 선택 후 SCAN 버튼 클릭")]),t._v(" "),s("p",[s("img",{attrs:{src:r(633),alt:"harbor scanning"}})]),t._v(" "),s("p",[t._v("scan 이 완료되고 artifact 를 눌러보면 다음과 같이 스캔 결과를 확인할 수 있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(634),alt:"vulnerabilities"}})]),t._v(" "),s("p",[t._v("Vulnerabilities 위에 마우스를 올려보면 취약성 통계결과도 확인할 수 있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:r(635),alt:"vul severity"}})]),t._v(" "),s("hr")])}),[],!1,null,null,null);e.default=a.exports}}]);